/* general */
html {
	font-size: min(2.4vw, 32px, 2.3vh);
	height: 100%;
}

/* @media (max-width: 1380px) {
	html {
		font-size: 22px;
	}
}
@media (max-width: 950px) {
	html {
		font-size: 16px;
	}
}
@media (max-width: 690px) {
	html {
		font-size: 16px;
	}
} */

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
	/* overflow: visible; */
	color: #eee;
	text-transform: uppercase;
	font-family: sans-serif;
	text-decoration: none;
	-webkit-tap-highlight-color: rgba(0,0,0,0);
}

.choosing .result,
.choosing .aiPlay {
	display: none;
}

body {
	background: radial-gradient(rgba(0, 0, 0, 0) 10%, rgba(0, 0, 0, 0.8)), hsl(240, 64%, 27%);
	height: 100%;
	width: 100%;

	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
	gap: 1rem;

	padding: 1rem;
}

header {
	display: flex;
	gap: 15rem;
	border: solid #bbb;
	border-radius: 1rem;
	padding: 1rem;
	align-items: center;
}

header .scoreContainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	gap: 0.2rem;

	font-size: 1.5em;

	background-color: #ddd;
	border-radius: 0.3rem;
	border: solid #777;
	padding: 0 1rem;
	height: 100%;

	text-shadow: #aaa 0 0 1rem;
}

header .scoreContainer * {
	color: #111;
	overflow: visible;
}

header .scoreContainer .scores {
	font-size: 2em;
	display: flex;
	align-items: center;
	gap: 1.5rem;
}

header .scoreContainer .scores .scoreDivisor {
	font-size: 0.5em;
}

.scoreNumber {
	text-align: center;
	width: 3.4rem;
}

.scoreNumber small {
	font-size: 0.2em;
	display: block;
	color: #555;
}

footer {
	width: 100%;
	display: flex;
	justify-content: end;
	gap: 1rem;
	align-items: flex-end;
}

footer a {
	color: #ddd;
	text-transform: none;
}

button {
	display: block;
	background: none;
	border: solid #ddd;
	padding: 0.5rem 1rem;
	border-radius: 0.3rem;
	font-size: 0.8em;
	cursor: pointer;
}

/* static */
.gamer,
.aiPlay,
.result {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
	height: 100%;
	gap: 2rem;
}


.choices {
	background-color: #ddd;
	border-radius: 50%;
	border: solid 1rem red;
	/* width: 100%; */
	height: 100%;
	max-height: 10rem;
	padding: 0.5rem;
	cursor: pointer;
	z-index: 1;
}

.choices.paper {
	border-color: hsl(240, 81%, 60%);
	box-shadow: inset 0.1rem 0.3rem 0.3rem rgba(50, 50, 50, 0.5), 0.05rem 0.2rem 0rem rgba(50, 50, 250, 0.7);
	grid-area: paper;
}

.choices.rock {
	border-color: hsl(0, 81%, 55%);
	box-shadow: inset 0.1rem 0.3rem 0.3rem rgba(50, 50, 50, 0.5), 0.05rem 0.2rem 0rem rgba(250, 50, 50, 0.7);
	grid-area: rock;
}

.choices.scissors {
	border-color: hsl(45, 81%, 55%);
	box-shadow: inset 0.1rem 0.3rem 0.3rem rgba(50, 50, 50, 0.5), 0.05rem 0.2rem 0rem rgba(250, 200, 50, 0.7);
	grid-area: scissors;
}

/* waiting for gamer choice */
.choosing .gamer .choicesContainer {
	display: grid;
	/* width: 25rem; */
	grid:
	"rock paper" 10rem
	"scissors scissors" 10rem
	/ 10rem 10rem;
	align-items: center;
	justify-items: center;
	gap: 4rem 8rem;
	
	position: relative;
}

.choosing .gamer .choicesContainer::before {
	content: "";
	background-image: url(./images/choicesBG.svg);
	background-size: cover;
	/* background-color: green; */
	position: absolute;
	top: 0;
	height: 24rem;
	width: 28rem;
	z-index: 0;
}

/* game played */
.resultState .choices:not(.chosen) {
	display: none;
}

.resultState {
	display: flex;
	gap: 2rem;
	text-align: center;
	align-items: center;
	justify-content: center;
}

.resultState > * {
	flex: 1;
}

.result {
	justify-content: center;
	font-size: 1.2em;
}